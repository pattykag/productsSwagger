{
  "openapi": "3.0.2",
  "info": {
    "title": "Exposici칩n del servicio: ProductsService",
    "description": "Este servicio est치 localizado en [/products/](/)",
    "version": ""
  },
  "x-sap-api-type": "ODATAV4",
  "x-odata-version": "4.0",
  "x-sap-shortText": "Exposici칩n del servicio: ProductsService",
  "servers": [
    {
      "url": "/products"
    }
  ],
  "tags": [
    {
      "name": "Products"
    },
    {
      "name": "Suppliers"
    },
    {
      "name": "Categories"
    }
  ],
  "paths": {
    "/Products": {
      "get": {
        "summary": "Lista de Productos",
        "tags": [
          "Products"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieved products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Products",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductsService.Products"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Ingresar un Producto por su ID",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "description": "New product",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsService.Products-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsService.Products"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Products({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Obtener Producto por su ID",
        "tags": [
          "Products"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsService.Products"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Actualizaci칩n de Producto por ID",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsService.Products-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Eliminar un Producto por su ID",
        "tags": [
          "Products"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Products({ID})/supplier": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve supplier of a product.",
        "tags": [
          "Products",
          "Suppliers"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "companyName",
                  "contactName",
                  "contactTitle",
                  "address",
                  "city",
                  "region",
                  "postalCode",
                  "country",
                  "phone",
                  "fax",
                  "homePage"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved supplier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsService.Suppliers"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Products({ID})/category": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve category of a product.",
        "tags": [
          "Products",
          "Categories"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "categoryName",
                  "description"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsService.Categories"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Suppliers": {
      "get": {
        "summary": "Retrieve a list of suppliers.",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "companyName",
                  "companyName desc",
                  "contactName",
                  "contactName desc",
                  "contactTitle",
                  "contactTitle desc",
                  "address",
                  "address desc",
                  "city",
                  "city desc",
                  "region",
                  "region desc",
                  "postalCode",
                  "postalCode desc",
                  "country",
                  "country desc",
                  "phone",
                  "phone desc",
                  "fax",
                  "fax desc",
                  "homePage",
                  "homePage desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "companyName",
                  "contactName",
                  "contactTitle",
                  "address",
                  "city",
                  "region",
                  "postalCode",
                  "country",
                  "phone",
                  "fax",
                  "homePage"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved suppliers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Suppliers",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductsService.Suppliers"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single supplier.",
        "tags": [
          "Suppliers"
        ],
        "requestBody": {
          "description": "New supplier",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsService.Suppliers-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created supplier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsService.Suppliers"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Suppliers({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single supplier.",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "companyName",
                  "contactName",
                  "contactTitle",
                  "address",
                  "city",
                  "region",
                  "postalCode",
                  "country",
                  "phone",
                  "fax",
                  "homePage"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved supplier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsService.Suppliers"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single supplier.",
        "tags": [
          "Suppliers"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsService.Suppliers-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single supplier.",
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Suppliers({ID})/product": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of product of a supplier.",
        "tags": [
          "Suppliers",
          "Products"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Products",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductsService.Products"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Ingresar un Producto por su ID",
        "tags": [
          "Suppliers",
          "Products"
        ],
        "requestBody": {
          "description": "New product",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsService.Products-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsService.Products"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Categories": {
      "get": {
        "summary": "Retrieve a list of categories.",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "categoryName",
                  "categoryName desc",
                  "description",
                  "description desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "categoryName",
                  "description"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Categories",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductsService.Categories"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Categories({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single category.",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "categoryName",
                  "description"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsService.Categories"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Categories({ID})/product": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of product of a category.",
        "tags": [
          "Categories",
          "Products"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Products",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductsService.Products"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Ingresar un Producto por su ID",
        "tags": [
          "Categories",
          "Products"
        ],
        "requestBody": {
          "description": "New product",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsService.Products-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsService.Products"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/batchProducts": {
      "post": {
        "summary": "Invoke action batchProducts",
        "tags": [
          "Service Operations"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ProductsService.oMessage"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProductsService.Products"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProductsService.Products": {
        "title": "Products",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "supplier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductsService.Suppliers"
              }
            ],
            "nullable": true
          },
          "supplier_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductsService.Categories"
              }
            ],
            "nullable": true
          },
          "category_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantityPerUnit": {
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 99999999.99,
                "minimum": -99999999.99
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "nullable": true
          },
          "unitsInStock": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitsOnOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reorderLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "discontinued": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ProductsService.Products-create": {
        "title": "Products (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "supplier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductsService.Suppliers-create"
              }
            ],
            "nullable": true
          },
          "supplier_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductsService.Categories-create"
              }
            ],
            "nullable": true
          },
          "category_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantityPerUnit": {
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 99999999.99,
                "minimum": -99999999.99
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "nullable": true
          },
          "unitsInStock": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitsOnOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reorderLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "discontinued": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "ID",
          "productName",
          "supplier_ID",
          "category_ID",
          "unitPrice",
          "unitsInStock"
        ]
      },
      "ProductsService.Products-update": {
        "title": "Products (for update)",
        "type": "object",
        "properties": {
          "productName": {
            "type": "string",
            "nullable": true
          },
          "supplier_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "category_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantityPerUnit": {
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 99999999.99,
                "minimum": -99999999.99
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "nullable": true
          },
          "unitsInStock": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitsOnOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reorderLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "discontinued": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ProductsService.Suppliers": {
        "title": "Suppliers",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactTitle": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "homePage": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsService.Products"
            }
          },
          "product@odata.count": {
            "$ref": "#/components/schemas/count"
          }
        }
      },
      "ProductsService.Suppliers-create": {
        "title": "Suppliers (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactTitle": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "homePage": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsService.Products-create"
            }
          }
        },
        "required": [
          "ID",
          "ID",
          "companyName",
          "contactName"
        ]
      },
      "ProductsService.Suppliers-update": {
        "title": "Suppliers (for update)",
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactTitle": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "homePage": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductsService.Categories": {
        "title": "Categories",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsService.Products"
            }
          },
          "product@odata.count": {
            "$ref": "#/components/schemas/count"
          }
        }
      },
      "ProductsService.Categories-create": {
        "title": "Categories (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsService.Products-create"
            }
          }
        },
        "required": [
          "ID",
          "ID",
          "categoryName"
        ]
      },
      "ProductsService.oMessage": {
        "title": "oMessage",
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "message": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          }
        }
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}